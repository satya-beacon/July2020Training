@model IEnumerable<UsermanagementApp.Entity.UserContact>

@{
    ViewData["Title"] = "Contacts";
}

<h1>My Contacts</h1>

<p>
    <a asp-action="Create" asp-controller="Contact" class="btn btn-link">Create New</a>
</p>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Zip)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Zip)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserId)
            </td>
            <td>
               
                @Html.ActionLink("Edit", "Edit", new {  id=item.Id  }) |
                @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
        </tr>
}
    </tbody>
</table>
@{ 
    int pageIndex = @ViewData["pageIndex"] != null ?  Convert.ToInt32( @ViewData["pageIndex"]) : 0;
    int prevIndex = pageIndex - 1;
    int nextIndex = pageIndex + 1;
    int firstIndex = 1;
    int lastIndex = (Convert.ToInt32(ViewData["totalItems"]) / 2);
 }
<div class="row">
    <div class="col-12">
        <a asp-route-pageIndex="@firstIndex" asp-action="Index" asp-controller="Contact">First</a> &nbsp;

        <a asp-route-pageIndex="@prevIndex" asp-action="Index" asp-controller="Contact">Prev</a> &nbsp;
        <a asp-route-pageIndex="@nextIndex" asp-action="Index" asp-controller="Contact">Next</a>
        <a asp-route-pageIndex="@lastIndex" asp-action="Index" asp-controller="Contact">Last</a> &nbsp;

    </div>
</div>
